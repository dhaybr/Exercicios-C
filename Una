1-
#include <stdio.h>

int main() {
    int numero;

    // Solicita ao usuário um número
    printf("Digite um número: ");
    scanf("%d", &numero);

    // Verifica se o número é par ou ímpar
    if (numero % 2 == 0) {
        printf("%d é par.\n", numero);
    } else {
        printf("%d é ímpar.\n", numero);
    }

    return 0;
}


2-
#include <stdio.h>

int main() {
    int N, soma = 0;

    // Solicita ao usuário um número N
    printf("Digite um número N: ");
    scanf("%d", &N);

    // Calcula a soma de 1 a N
    for (int i = 1; i <= N; i++) {
        soma += i;
    }

    // Exibe o resultado
    printf("A soma de todos os números de 1 a %d é: %d\n", N, soma);

    return 0;
}


3-
#include <stdio.h>

int main() {
    int numero, i, ehPrimo = 1; // Assume que o número é primo

    // Solicita ao usuário um número
    printf("Digite um número: ");
    scanf("%d", &numero);

    // Números menores que 2 não são primos
    if (numero < 2) {
        ehPrimo = 0;
    } else {
        // Verifica se o número é primo
        for (i = 2; i <= numero / 2; i++) {
            if (numero % i == 0) {
                ehPrimo = 0; // Não é primo
                break;
            }
        }
    }

    // Exibe o resultado
    if (ehPrimo) {
        printf("%d é um número primo.\n", numero);
    } else {
        printf("%d não é um número primo.\n", numero);
    }

    return 0;
}


4-
#include <stdio.h>

int main() {
    int numero;

    // Solicita ao usuário um número
    printf("Digite um número: ");
    scanf("%d", &numero);

    // Imprime a tabela de multiplicação
    printf("Tabela de multiplicação de %d:\n", numero);
    for (int i = 1; i <= 10; i++) {
        printf("%d x %d = %d\n", numero, i, numero * i);
    }

    return 0;
}


5-
#include <stdio.h>
#include <string.h>

int main() {
    char str[100]; // Array para armazenar a string
    int i, len;

    // Solicita ao usuário uma string
    printf("Digite uma string: ");
    fgets(str, sizeof(str), stdin); // Lê a string com espaços

    // Remove o caractere de nova linha, se presente
    len = strlen(str);
    if (str[len - 1] == '\n') {
        str[len - 1] = '\0';
    }

    // Imprime a string invertida
    printf("String invertida: ");
    for (i = len - 1; i >= 0; i--) {
        putchar(str[i]);
    }
    printf("\n");

    return 0;
}


6-
#include <stdio.h>

// Função para calcular o fatorial
long long fatorial(int n) {
    if (n == 0 || n == 1) {
        return 1; // O fatorial de 0 e 1 é 1
    } else {
        return n * fatorial(n - 1); // Chamada recursiva
    }
}

int main() {
    int numero;

    // Solicita ao usuário um número
    printf("Digite um número: ");
    scanf("%d", &numero);

    // Verifica se o número é negativo
    if (numero < 0) {
        printf("Fatorial não definido para números negativos.\n");
    } else {
        // Calcula e imprime o fatorial
        printf("Fatorial de %d é: %lld\n", numero, fatorial(numero));
    }

    return 0;
}


7-
#include <stdio.h>

int main() {
    int numeros[10];
    int maior, menor;

    // Lê 10 números inteiros
    printf("Digite 10 números inteiros:\n");
    for (int i = 0; i < 10; i++) {
        printf("Número %d: ", i + 1);
        scanf("%d", &numeros[i]);
    }

    // Inicializa maior e menor com o primeiro número do array
    maior = menor = numeros[0];

    // Encontra o maior e o menor número
    for (int i = 1; i < 10; i++) {
        if (numeros[i] > maior) {
            maior = numeros[i];
        }
        if (numeros[i] < menor) {
            menor = numeros[i];
        }
    }

    // Exibe o resultado
    printf("O maior número é: %d\n", maior);
    printf("O menor número é: %d\n", menor);

    return 0;
}


8-
#include <stdio.h>

void bubbleSort(int array[], int n) {
    int i, j, temp;
    // Loop para controlar o número de passes
    for (i = 0; i < n - 1; i++) {
        // Loop para comparar os elementos
        for (j = 0; j < n - i - 1; j++) {
            if (array[j] > array[j + 1]) {
                // Troca os elementos
                temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

int main() {
    int numeros[10];
    int n = sizeof(numeros) / sizeof(numeros[0]);

    // Lê 10 números inteiros
    printf("Digite 10 números inteiros:\n");
    for (int i = 0; i < n; i++) {
        printf("Número %d: ", i + 1);
        scanf("%d", &numeros[i]);
    }

    // Ordena o array usando Bubble Sort
    bubbleSort(numeros, n);

    // Exibe o array ordenado
    printf("Números ordenados em ordem crescente:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", numeros[i]);
    }
    printf("\n");

    return 0;
}


9-
#include <stdio.h>

int main() {
    float celsius, fahrenheit;

    // Solicita ao usuário a temperatura em Celsius
    printf("Digite a temperatura em graus Celsius: ");
    scanf("%f", &celsius);

    // Converte Celsius para Fahrenheit
    fahrenheit = (celsius * 9 / 5) + 32;

    // Exibe o resultado
    printf("%.2f graus Celsius equivalem a %.2f graus Fahrenheit.\n", celsius, fahrenheit);

    return 0;
}


10-
#include <stdio.h>
#include <string.h>

int main() {
    char str[100]; // Array para armazenar a string
    int i, contador = 0;

    // Solicita ao usuário uma string
    printf("Digite uma string: ");
    fgets(str, sizeof(str), stdin); // Lê a string com espaços

    // Remove o caractere de nova linha, se presente
    str[strcspn(str, "\n")] = 0;

    // Conta as vogais
    for (i = 0; str[i] != '\0'; i++) {
        char letra = str[i];
        if (letra == 'a' || letra == 'e' || letra == 'i' || letra == 'o' || letra == 'u' ||
            letra == 'A' || letra == 'E' || letra == 'I' || letra == 'O' || letra == 'U') {
            contador++;
        }
    }

    // Exibe o resultado
    printf("Número de vogais na string: %d\n", contador);

    return 0;
}
